version: '3.7'

# TODO: rename directories to be more constistent
# TODO: add user permissions
# TODO: add torrent "black hole" dir to jackett and deluge
# TODO: make downloaded files go to /media/incoming
# TODO: split out .env files into individual ones so up -d won't restart everything
# TODO: add watchtower https://github.com/v2tec/watchtower
# TODO: split deluge into deluge and openvpn containers
# TODO: watch for pihole update so it can run as non-root user

services:
  # TODO: Done
  portal:
    labels:
      - "traefik.frontend.rule=Host:portal.${DOMAIN}"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
      - "traefik.port=8080"
    container_name: portal
    restart: unless-stopped
    image: traefik:alpine
    user: ${NATEFLIX_UID}:${DOCKER_GID}
    command:
      - --docker.domain=${DOMAIN}
      - "--entryPoints=Name:https Address::8443 TLS"
      - "--entryPoints=Name:http Address::8888 Redirect.EntryPoint:https Redirect.Permanent:true"
      - --defaultentrypoints=http,https
      - --api
      - --retry
      - --metrics
      - --ping
      - --docker
      - --docker.endpoint=unix:///var/run/docker.sock
      - --docker.watch=true
      - --docker.exposedbydefault=true
      - --configFile=/etc/traefik/config.toml
    ports:
      - ${ADVERTISE_IP}:80:8888/tcp
      - ${ADVERTISE_IP}:443:8443/tcp
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${CONFIG_DIR}/portal:/etc/traefik:ro
    env_file:
      - .env

  # TODO: DONE
  # TODO: figure out a way to use ssl or remove s on https in links and add :8080
  jackett:
    labels:
      - "traefik.frontend.rule=Host:jackett.${DOMAIN}"
      - "traefik.port=8080"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: jackett
    restart: unless-stopped
    image: jackett
    build:
      context: jackett
      args:
        PUID: ${NATEFLIX_UID}
        PGID: ${NATEFLIX_GID}
    stop_signal: SIGINT
    networks:
      default:
        aliases:
          - jackett.${DOMAIN}
    expose:
      - 8080
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/jackett:/config
      - ${CONFIG_DIR}/torrents:/torrents
    env_file:
      - .env

  # TODO: DONE DONE
  nzbget:
    labels:
      - "traefik.frontend.rule=Host:newz.${DOMAIN}"
      - "traefik.port=6789"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: nzbget
    restart: unless-stopped
    image: nzbget
    build:
      context: nzbget
      args:
        PUID: ${NATEFLIX_UID}
        PGID: ${NATEFLIX_GID}
    expose:
      - 6789
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/nzbget:/config
      - ${CONFIG_DIR}/downloads/nzbget:/nzb-downloads
      - ${MEDIA_ROOT}:/data
    env_file:
      - .env

  # TODO: file permissions
  # TODO: figure out advertise ip
  # TODO: do I want /data ro?
  plex:
    labels:
      - "traefik.frontend.rule=Host:watch.${DOMAIN}"
      - "traefik.port=32400"
    depends_on:
      - portal
    container_name: plex
    image: plexinc/pms-docker:plexpass
    restart: unless-stopped
    ports:
      - ${ADVERTISE_IP}:32400:32400/tcp
      - ${ADVERTISE_IP}:3005:3005/tcp
      - ${ADVERTISE_IP}:8324:8324/tcp
      - ${ADVERTISE_IP}:32469:32469/tcp
      - ${ADVERTISE_IP}:1900:1900/udp
      - ${ADVERTISE_IP}:32410:32410/udp
      - ${ADVERTISE_IP}:32412:32412/udp
      - ${ADVERTISE_IP}:32413:32413/udp
      - ${ADVERTISE_IP}:32414:32414/udp
    expose:
      - 32400
      - 3005
      - 8324
      - 32469
      - 1900
      - 32410
      - 32412
      - 32413
      - 32414
    hostname: ${HOSTNAME:-nateflix}
    devices:
      - /dev/dri
    privileged: true
    environment:
      PLEX_CLAIM: ${PLEX_CLAIM:-}
      PLEX_UPDATE_CHANNEL: 8
      ADVERTISE_IP: https://${ADVERTISE_IP}:32400/
      PLEX_UID: ${NATEFLIX_UID}
      PLEX_GID: ${NATEFLIX_GID}
      CHANGE_CONFIG_DIR_OWNERSHIP: "false"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/plex:/config
      - /dev/shm:/transcode
      - ${MEDIA_ROOT}:/data:ro
    env_file:
      - .env

  # TODO: Done
  plexstats:
    labels:
      - "traefik.frontend.rule=Host:stats.${DOMAIN}"
      - "traefik.port=8181"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: plexstats
    restart: unless-stopped
    image: tautulli/tautulli
    expose:
      - 8181
    environment:
      PUID: ${NATEFLIX_UID}
      PGID: ${NATEFLIX_GID}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/plexstats:/config
      - ${CONFIG_DIR}/plex/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro
    env_file:
      - .env

  ombi:
    labels:
      - "traefik.frontend.rule=Host:request.${DOMAIN}"
      - "traefik.port=5000"
    depends_on:
      - portal
    container_name: ombi
    restart: unless-stopped
    image: ombi
    build:
      context: ombi
      args:
        PUID: ${NATEFLIX_UID}
        PGID: ${NATEFLIX_GID}
    environment:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    expose:
      - 5000
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/ombi:/config
    env_file:
      - .env

  # TODO: Done
  sonarr:
    labels:
      - "traefik.frontend.rule=Host:shows.${DOMAIN}"
      - "traefik.port=8989"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: sonarr
    restart: unless-stopped
    image: sonarr
    build:
      context: sonarr
      args:
        PUID: ${NATEFLIX_UID}
        PGID: ${NATEFLIX_GID}
    expose:
      - 8989
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/sonarr:/config
      - ${CONFIG_DIR}/downloads/nzbget:/nzb-downloads
      - ${CONFIG_DIR}/downloads/deluge:/torrent-downloads
      - ${MEDIA_ROOT}:/data
    env_file:
      - .env

  # TODO: Done
  radarr:
    labels:
      - "traefik.frontend.rule=Host:movies.${DOMAIN}"
      - "traefik.port=7878"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: radarr
    restart: unless-stopped
    image: radarr
    build:
      context: radarr
      args:
        PUID: ${NATEFLIX_UID}
        PGID: ${NATEFLIX_GID}
    expose:
      - 7878
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/radarr:/config
      - ${CONFIG_DIR}/downloads/nzbget:/nzb-downloads
      - ${CONFIG_DIR}/downloads/deluge:/torrent-downloads
      - ${MEDIA_ROOT}:/data
    env_file:
      - .env

  # TODO: Done
  lidarr:
    labels:
      - "traefik.frontend.rule=Host:music.${DOMAIN}"
      - "traefik.port=8686"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: lidarr
    restart: unless-stopped
    image: lidarr
    build:
      context: lidarr
      args:
        PUID: ${NATEFLIX_UID}
        PGID: ${NATEFLIX_GID}
    expose:
      - 8686
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/lidarr:/config
      - ${CONFIG_DIR}/downloads/nzbget:/nzb-downloads
      - ${CONFIG_DIR}/downloads/deluge:/torrent-downloads
      - ${MEDIA_ROOT}:/data
    env_file:
      - .env

  # TODO: verify config
  deluge:
    labels:
      - "traefik.frontend.rule=Host:torrents.${DOMAIN}"
      - "traefik.port=8112"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    container_name: deluge
    restart: unless-stopped
    image: deluge
    build: deluge
    environment:
      VPN_REGION: ${VPN_REGION}
      PUID: ${NATEFLIX_UID}
      PGID: ${NATEFLIX_GID}
    expose:
      - 8112
    dns:
      - 209.222.18.222
      - 209.222.18.218
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_DIR}/deluge:/deluge-config
      - ${CONFIG_DIR}/deluge-web:/deluge-web-config
      - ${CONFIG_DIR}/openvpn:/openvpn
      - ${CONFIG_DIR}/downloads/deluge:/torrent-downloads
      - ${MEDIA_ROOT}:/data
    env_file:
      - .env

  # TODO: BIG problem for volume permissions! need to make my own container
  pihole:
    labels:
      - "traefik.frontend.rule=Host:pihole.${DOMAIN}"
      - "traefik.port=80"
      - "traefik.frontend.auth.basic.usersFile=/etc/traefik/users"
    depends_on:
      - portal
    restart: unless-stopped
    container_name: pihole
    image: pihole/pihole:latest
    cap_add:
      - NET_ADMIN
    ports:
      - ${ADVERTISE_IP}:53:53/tcp
      - ${ADVERTISE_IP}:53:53/udp
      - ${ADVERTISE_IP}:67:67/udp
    expose:
      - 80
    environment:
      WEBPASSWORD: ""
      DNS1: 8.8.8.8
      DNS2: 8.8.4.4
      ServerIP: ${ADVERTISE_IP}
      PROXY_LOCATION: pihole
      VIRTUAL_HOST: pihole.${DOMAIN}
      VIRTUAL_PORT: 443
    volumes:
      - ${CONFIG_DIR}/pihole/config:/etc/pihole
      - ${CONFIG_DIR}/pihole/dnsmasq:/etc/dnsmasq.d
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    env_file:
      - .env
